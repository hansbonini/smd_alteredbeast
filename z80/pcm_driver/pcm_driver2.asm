;
; +-------------------------------------------------------------------------+
; |      This file was generated by The Interactive Disassembler (IDA)      |
; |           Copyright (c) 2023 Hex-Rays, <support@hex-rays.com>           |
; +-------------------------------------------------------------------------+
;
; Input SHA256 : F6A385D6649A337B7646C96AF76B7CDE659508B36BFB341B4F940CC8ECC8F09C
; Input MD5    : 81C30D26B92C7247EEB0B8B88D185B34
; Input CRC32  : 514C740C
; Processor       : z80 []
; Target assembler: Zilog Macro Assembler
; ===========================================================================
; Segment type: Pure code
; Main segment
; =============== S U B R O U T I N E =======================================

YM2612_A0 EQU $4000
YM2612_D0 EQU $4001
PCM_ID EQU $017F
STACK EQU $1FFF

start:
                di
                ld      sp, STACK

loc_4:                                  ; CODE XREF: start+8↓j
                                        ; start+1A↓j ...
                ld      a, (PCM_ID)
                or      a
                jp      z, loc_4
                cp      1
                jp      z, short_play
                cp      2
                jp      z, medium_play
                cp      3
                jp      z, full_play
                jp      loc_4
; ---------------------------------------------------------------------------
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop

locret_38:                              ; CODE XREF: ROM:000000E7↓p
                reti
; ---------------------------------------------------------------------------
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                retn
; ---------------------------------------------------------------------------

short_play:                                 ; CODE XREF: start+D↑j
                ld      hl,  pcm_audio+60h
                ld      bc,  pcm_audio+3F8h
                ld      a, 30h ; '0'
                ld      ($1D0F), a
                jp      loc_92
; ---------------------------------------------------------------------------

medium_play:                                 ; CODE XREF: start+12↑j
                ld      hl, pcm_audio
                ld      bc,  pcm_audio+86Bh
                ld      a, 30h ; '0'
                ld      ($1D0F), a
                jp      loc_92
; ---------------------------------------------------------------------------

full_play:                                 ; CODE XREF: start+17↑j
                ld      hl, pcm_audio
                ld      bc, pcm_audio_end-pcm_audio
                ld      a, 30h ; '0'
                ld      ($1D0F), a
                jp      loc_92
; ---------------------------------------------------------------------------

loc_92:                                 ; CODE XREF: start+73↑j
                                        ; start+81↑j ...
                call    sub_CF
                push    bc
                ld      a, 80h
                ld      c, 2Bh ; '+'
                call    sub_C4
                pop     bc
                ld      a, ($1D0F)

loc_A1:                                 ; CODE XREF: start+B6↓j
                push    bc
                ld      b, a

loc_A3:                                 ; CODE XREF: start:loc_A3↓j
                djnz    $
                pop     bc
                push    af
                push    bc
                ld      a, (hl)
                ld      c, 2Ah ; '*'
                call    sub_C4
                pop     bc
                inc     hl
                dec     bc
                ld      a, b
                or      c
                jr      z, loc_B8
                pop     af
                jr      loc_A1
; ---------------------------------------------------------------------------

loc_B8:                                 ; CODE XREF: start+B3↑j
                xor     a
                ld      (PCM_ID), a
                ld      c, 2Bh ; '+'
                call    sub_C4
                jp      loc_4
; End of function start


; =============== S U B R O U T I N E =======================================


sub_C4:                                 ; CODE XREF: start+9A↑p
                                        ; start+AB↑p ...
                push    af
                ld      a, c
                ld      (YM2612_A0), a
                pop     af
                nop
                ld      (YM2612_D0), a
                ret
; End of function sub_C4


; =============== S U B R O U T I N E =======================================


sub_CF:                                 ; CODE XREF: start:loc_92↑p
                push    hl
                push    de
                push    bc
                ld      b, 7
                xor     a
                ld      c, 28h ; '('

loc_D7:                                 ; CODE XREF: sub_CF+C↓j
                call    sub_C4
                inc     a
                djnz    loc_D7
                pop     bc
                pop     de
                pop     hl
                ret
; End of function sub_CF

; ---------------------------------------------------------------------------
                add     a, b
                nop
                and     b
                nop
                ret     nz
                nop
                rst     38h
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
                nop
; ---------------------------------------------------------------------------
byte_17F:       db 0                    ; DATA XREF: start:loc_4↑r
                                        ; start+B9↑w
pcm_audio:                              ; DATA XREF: start:medium_play↑o
                                        ; start:full_play↑o
                INCBIN "audio/pcm/0001552C.pcm"
pcm_audio_end: