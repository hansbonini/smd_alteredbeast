name: ci
run-name: Building Sega Genesis ROM
on:
  push:
    branches: [ master ]
jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Setup Go environment
        uses: actions/setup-go@v5.0.1
        with:
          # Target architecture for Go to use. Examples: x86, x64. Will use system architecture by default.
          architecture: windows/amd64
      - name: Prepare
        run: |
          mkdir build
          mkdir screenshots
          echo "" > '${{github.workspace}}\build\Altered Beast (US).bin'
          echo "" > '${{github.workspace}}\build\Altered Beast (US).txt'
      - name: Execute asm68k
        run: |
          $GHWORKSPACE="${{ github.workspace }}"
          $GHWORKSPACE=$GHWORKSPACE.replace("\", "/")
          make WORKSPACE="$GHWORKSPACE" NAME="Altered Beast" VERSION="US" ASM68K_SWITCHES="//m //p //k" build
      - name: Run Blastem and record movie
        run: |
          $timer = New-Object timers.timer
          $timer.interval = 20000
          Register-ObjectEvent -InputObject $timer -EventName Elapsed -SourceIdentifier Timer.Output -Action { Stop-Process $(Get-Process retroarch | select -expand id) }
          $timer.Enabled = $true
          Write-Host "Running Blastem trough Retroarch"
          Start-Process -NoNewWindow ${{github.workspace}}\tools\RetroArch-Win64\retroarch.exe --libretro=${{github.workspace}}\tools\RetroArch-Win64\picodrive_libretro.dll "${{github.workspace}}\build\Altered Beast (US).bin" --record="${{github.workspace}}\screenshots\blastem.png" --appendconfig="retroarch.cfg"
          Write-Host "Waiting Recording"
          while ($true) { Start-Sleep -Seconds 1 }
      - name: Run Genesis Plus GX and record movie
        run: |
          $timer = New-Object timers.timer
          $timer.interval = 20000
          Register-ObjectEvent -InputObject $timer -EventName Elapsed -SourceIdentifier Timer.Output -Action { Stop-Process $(Get-Process retroarch | select -expand id) }
          $timer.Enabled = $true
          Start-Process -NoNewWindow ${{github.workspace}}\tools\RetroArch-Win64\retroarch.exe --libretro=${{github.workspace}}\tools\RetroArch-Win64\picodrive_libretro.dll "${{github.workspace}}\build\Altered Beast (US).bin" --record="${{github.workspace}}\screenshots\gensplusgx.png" --appendconfig="retroarch.cfg"
          while ($true) { Start-Sleep -Seconds 1 }
      - name: Run Picodrive and record movie
        run: |
          $timer = New-Object timers.timer
          $timer.interval = 20000
          Register-ObjectEvent -InputObject $timer -EventName Elapsed -SourceIdentifier Timer.Output -Action { Stop-Process $(Get-Process retroarch | select -expand id) }
          $timer.Enabled = $true
          ${{github.workspace}}\tools\RetroArch-Win64\retroarch.exe --libretro=${{github.workspace}}\tools\RetroArch-Win64\picodrive_libretro.dll "${{github.workspace}}\build\Altered Beast (US).bin" --record="${{github.workspace}}\screenshots\picodrive.png" --appendconfig="retroarch.cfg"
          while ($true) { Start-Sleep -Seconds 1 }
      - name: GIT Commit Build Records
        if: github.event_name == 'push'
        run: |
          git config --global user.name "Hans Bonini"
          git config --global user.email "hans@ysolutions.com.br"
          git add screenshots
          git commit -a -m "Adding screenshots from build `${{ github.sha }}`"
          git push